openapi: "3.0.0"
info:
  title: GBR Engine API
  version: "1.0.0"
paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns the health status of the API
      operationId: getHealth
      responses:
        "200":
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /services:
    post:
      summary: Query services with filters
      description: Returns schedule information for services matching the provided filters
      operationId: queryServices
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceQueryRequest"
      responses:
        "200":
          description: Services found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ServiceResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: No services found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /locations:
    get:
      summary: Get all locations
      description: Returns a list of all locations in the database
      operationId: getLocations
      responses:
        "200":
          description: List of locations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Location"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /operators:
    get:
      summary: Get all operators
      description: Returns a list of all train operating companies (TOCs) in the database
      operationId: getOperators
      responses:
        "200":
          description: List of operators
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Operator"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    ServiceQueryRequest:
      type: object
      properties:
        headcode:
          type: string
          description: Filter by headcode
          example: "1B73"
        operator_code:
          type: string
          description: Filter by operator/TOC code
          example: "GW"
        passes_through:
          type: array
          description: Filter by locations the service passes through
          items:
            type: object
            properties:
              location_filter:
                $ref: "#/components/schemas/LocationFilter"
              time_from:
                type: string
                format: date-time
                description: Earliest time at this location
                example: "2025-10-26T00:00:00Z"
              time_to:
                type: string
                format: date-time
                description: Latest time at this location
                example: "2025-10-26T23:59:59Z"
    LocationFilter:
      type: object
      properties:
        stanox:
          type: string
          description: The STANOX code of the location
          example: "87544"
        crs:
          type: string
          description: The CRS code of the location (alternative to stanox)
          example: "PAD"
        tiploc:
          type: string
          description: The TIPLOC code of the location (alternative to stanox)
          example: "PADTON"
        name:
          type: string
          description: The station name (alternative to stanox)
          example: "London Paddington"
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          example: "healthy"
        version:
          type: string
          example: "1.0.0"
      required:
        - status
        - version
    ServiceResponse:
      type: object
      properties:
        id:
          type: integer
          example: 107343
        train_uid:
          type: string
          example: "Y81836"
        signalling_id:
          type: string
          example: "1B73"
        headcode:
          type: string
          example: "1273"
        train_category:
          type: string
          example: "XX"
        schedule_start_date:
          type: string
          format: date
          example: "2025-10-11"
        schedule_end_date:
          type: string
          format: date
          example: "2025-10-11"
        schedule_days_runs:
          type: string
          example: "0000010"
        train_status:
          type: string
          example: "P"
        operator:
          $ref: "#/components/schemas/Operator"
        locations:
          type: array
          items:
            $ref: "#/components/schemas/ScheduleLocation"
      required:
        - id
        - train_uid
        - signalling_id
        - headcode
        - locations
    Operator:
      type: object
      properties:
        code:
          type: string
          example: "LE"
        name:
          type: string
          example: "Greater Anglia"
      required:
        - code
        - name
    Location:
      type: object
      properties:
        tiploc_codes:
          type: array
          items:
            type: string
          example: ["STANAIR", "STANSTN"]
        stanox:
          type: string
          example: "87544"
        crs:
          type: string
          example: "STA"
        full_name:
          type: string
          example: "Stansted Airport"
      required:
        - tiploc_codes
        - stanox
    ScheduleLocation:
      type: object
      properties:
        id:
          type: integer
          example: 1816240
        location_type:
          type: string
          example: "LO"
        location:
          $ref: "#/components/schemas/Location"
        arrival:
          type: string
          format: time
          example: "14:43:00.000000"
        public_arrival:
          type: string
          format: time
          example: "14:43:00.000000"
        departure:
          type: string
          format: time
          example: "14:43:00.000000"
        public_departure:
          type: string
          format: time
          example: "14:43:00.000000"
        platform:
          type: string
          example: "1"
        location_order:
          type: integer
          example: 1
        actual_arrival:
          type: string
          description: "Actual arrival time from TRUST feed (if available)"
          example: "14:44"
        actual_departure:
          type: string
          description: "Actual departure time from TRUST feed (if available)"
          example: "14:45"
        arrival_lateness:
          type: integer
          description: "Lateness in minutes for arrival (positive = late, negative = early)"
          example: 1
        departure_lateness:
          type: integer
          description: "Lateness in minutes for departure (positive = late, negative = early)"
          example: 2
      required:
        - id
        - location_type
        - location
        - location_order
    LocationServicesResponse:
      type: object
      properties:
        location:
          $ref: "#/components/schemas/Location"
        services:
          type: array
          items:
            $ref: "#/components/schemas/ServiceResponse"
      required:
        - location
        - services
    NotFoundResponse:
      type: object
      properties:
        error:
          type: string
          example: "No services found"
      required:
        - error
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Database error"
        message:
          type: string
          example: "Failed to connect to database"
        stack:
          type: string
          example: "error at line 42 in service.go"
      required:
        - error
        - message
