openapi: "3.0.0"
info:
  title: GBR Engine API
  version: "1.0.0"
paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns the health status of the API
      operationId: getHealth
      responses:
        "200":
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /service:
    get:
      summary: Get services by headcode
      description: Returns schedule information for all services with the given headcode
      operationId: getService
      parameters:
        - name: headcode
          in: query
          required: true
          description: The headcode of the services to retrieve
          schema:
            type: string
            example: "1B73"
      responses:
        "200":
          description: Services found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ServiceResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: No services found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /services-at-location:
    get:
      summary: Get services currently at a location
      description: Returns all train services currently at a specific location based on real-time train tracking data. Specify exactly one of the location parameters.
      operationId: getServicesAtLocation
      parameters:
        - name: name
          in: query
          required: false
          description: The station name to search for trains at
          schema:
            type: string
            example: "London Paddington"
        - name: crs
          in: query
          required: false
          description: The CRS code of the station to search for trains at
          schema:
            type: string
            example: "PAD"
        - name: tiploc
          in: query
          required: false
          description: The TIPLOC code of the location to search for trains at
          schema:
            type: string
            example: "PADTON"
        - name: stanox
          in: query
          required: false
          description: The STANOX code of the location to search for trains at
          schema:
            type: string
            example: "87544"
        - name: date
          in: query
          required: false
          description: The date to search for services (YYYY-MM-DD format). Defaults to today.
          schema:
            type: string
            format: date
            example: "2025-10-12"
      responses:
        "200":
          description: Services at location found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationServicesResponse"
        "400":
          description: Bad request - must specify exactly one location parameter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Location not found or no services at location
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          example: "healthy"
        version:
          type: string
          example: "1.0.0"
      required:
        - status
        - version
    ServiceResponse:
      type: object
      properties:
        id:
          type: integer
          example: 107343
        train_uid:
          type: string
          example: "Y81836"
        signalling_id:
          type: string
          example: "1B73"
        headcode:
          type: string
          example: "1273"
        train_category:
          type: string
          example: "XX"
        schedule_start_date:
          type: string
          format: date
          example: "2025-10-11"
        schedule_end_date:
          type: string
          format: date
          example: "2025-10-11"
        schedule_days_runs:
          type: string
          example: "0000010"
        train_status:
          type: string
          example: "P"
        operator:
          $ref: "#/components/schemas/Operator"
        locations:
          type: array
          items:
            $ref: "#/components/schemas/ScheduleLocation"
      required:
        - id
        - train_uid
        - signalling_id
        - headcode
        - locations
    Operator:
      type: object
      properties:
        code:
          type: string
          example: "LE"
        name:
          type: string
          example: "Greater Anglia"
      required:
        - code
        - name
    Location:
      type: object
      properties:
        tiploc:
          type: string
          example: "STANAIR"
        stanox:
          type: string
          example: "87544"
        crs:
          type: string
          example: "STA"
        full_name:
          type: string
          example: "Stansted Airport"
      required:
        - tiploc
    ScheduleLocation:
      type: object
      properties:
        id:
          type: integer
          example: 1816240
        location_type:
          type: string
          example: "LO"
        location:
          $ref: "#/components/schemas/Location"
        arrival:
          type: string
          format: time
          example: "14:43:00.000000"
        public_arrival:
          type: string
          format: time
          example: "14:43:00.000000"
        departure:
          type: string
          format: time
          example: "14:43:00.000000"
        public_departure:
          type: string
          format: time
          example: "14:43:00.000000"
        platform:
          type: string
          example: "1"
        location_order:
          type: integer
          example: 1
        actual_arrival:
          type: string
          description: "Actual arrival time from TRUST feed (if available)"
          example: "14:44"
        actual_departure:
          type: string
          description: "Actual departure time from TRUST feed (if available)"
          example: "14:45"
        arrival_lateness:
          type: integer
          description: "Lateness in minutes for arrival (positive = late, negative = early)"
          example: 1
        departure_lateness:
          type: integer
          description: "Lateness in minutes for departure (positive = late, negative = early)"
          example: 2
      required:
        - id
        - location_type
        - location
        - location_order
    LocationServicesResponse:
      type: object
      properties:
        location:
          type: object
          properties:
            search_term:
              type: string
              example: "London Paddington"
            search_type:
              type: string
              example: "name"
            name:
              type: string
              example: "London Paddington"
            stanox:
              type: string
              example: "87544"
            crs_code:
              type: string
              example: "PAD"
            tiploc_codes:
              type: array
              items:
                type: string
              example: ["PADTON", "PADTNJN"]
          required:
            - search_term
            - search_type
            - stanox
        services:
          type: array
          items:
            $ref: "#/components/schemas/ServiceResponse"
      required:
        - location
        - services
    NotFoundResponse:
      type: object
      properties:
        error:
          type: string
          example: "No services found"
      required:
        - error
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Database error"
        message:
          type: string
          example: "Failed to connect to database"
        stack:
          type: string
          example: "error at line 42 in service.go"
      required:
        - error
        - message
