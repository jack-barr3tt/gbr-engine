// Package api_types provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api_types

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

// ErrorResponse defines model for ErrorResponse.
type ErrorResponse struct {
	Error   string  `json:"error"`
	Message string  `json:"message"`
	Stack   *string `json:"stack,omitempty"`
}

// HealthResponse defines model for HealthResponse.
type HealthResponse struct {
	Status  string `json:"status"`
	Version string `json:"version"`
}

// Location defines model for Location.
type Location struct {
	Crs         *string  `json:"crs,omitempty"`
	FullName    *string  `json:"full_name,omitempty"`
	Stanox      string   `json:"stanox"`
	TiplocCodes []string `json:"tiploc_codes"`
}

// LocationFilter defines model for LocationFilter.
type LocationFilter struct {
	// Crs The CRS code of the location (alternative to stanox)
	Crs *string `json:"crs,omitempty"`

	// Name The station name (alternative to stanox)
	Name *string `json:"name,omitempty"`

	// Stanox The STANOX code of the location
	Stanox *string `json:"stanox,omitempty"`

	// Tiploc The TIPLOC code of the location (alternative to stanox)
	Tiploc *string `json:"tiploc,omitempty"`
}

// NotFoundResponse defines model for NotFoundResponse.
type NotFoundResponse struct {
	Error string `json:"error"`
}

// Operator defines model for Operator.
type Operator struct {
	Code string `json:"code"`
	Name string `json:"name"`
}

// ScheduleLocation defines model for ScheduleLocation.
type ScheduleLocation struct {
	// ActualArrival Actual arrival time from TRUST feed (if available)
	ActualArrival *string `json:"actual_arrival,omitempty"`

	// ActualDeparture Actual departure time from TRUST feed (if available)
	ActualDeparture *string `json:"actual_departure,omitempty"`
	Arrival         *string `json:"arrival,omitempty"`

	// ArrivalLateness Lateness in minutes for arrival (positive = late, negative = early)
	ArrivalLateness *int    `json:"arrival_lateness,omitempty"`
	Departure       *string `json:"departure,omitempty"`

	// DepartureLateness Lateness in minutes for departure (positive = late, negative = early)
	DepartureLateness *int     `json:"departure_lateness,omitempty"`
	Id                int      `json:"id"`
	Location          Location `json:"location"`
	LocationOrder     int      `json:"location_order"`
	LocationType      string   `json:"location_type"`
	Platform          *string  `json:"platform,omitempty"`
	PublicArrival     *string  `json:"public_arrival,omitempty"`
	PublicDeparture   *string  `json:"public_departure,omitempty"`
}

// ServiceQueryRequest defines model for ServiceQueryRequest.
type ServiceQueryRequest struct {
	// Headcode Filter by headcode
	Headcode *string `json:"headcode,omitempty"`

	// OperatorCode Filter by operator/TOC code
	OperatorCode *string `json:"operator_code,omitempty"`

	// PassesThrough Filter by locations the service passes through
	PassesThrough *[]struct {
		LocationFilter *LocationFilter `json:"location_filter,omitempty"`

		// TimeFrom Earliest time at this location
		TimeFrom *time.Time `json:"time_from,omitempty"`

		// TimeTo Latest time at this location
		TimeTo *time.Time `json:"time_to,omitempty"`
	} `json:"passes_through,omitempty"`
}

// ServiceResponse defines model for ServiceResponse.
type ServiceResponse struct {
	Headcode          string              `json:"headcode"`
	Id                int                 `json:"id"`
	Locations         []ScheduleLocation  `json:"locations"`
	Operator          *Operator           `json:"operator,omitempty"`
	ScheduleDaysRuns  *string             `json:"schedule_days_runs,omitempty"`
	ScheduleEndDate   *openapi_types.Date `json:"schedule_end_date,omitempty"`
	ScheduleStartDate *openapi_types.Date `json:"schedule_start_date,omitempty"`
	SignallingId      string              `json:"signalling_id"`
	TrainCategory     *string             `json:"train_category,omitempty"`
	TrainStatus       *string             `json:"train_status,omitempty"`
	TrainUid          string              `json:"train_uid"`
}

// QueryServicesJSONRequestBody defines body for QueryServices for application/json ContentType.
type QueryServicesJSONRequestBody = ServiceQueryRequest
